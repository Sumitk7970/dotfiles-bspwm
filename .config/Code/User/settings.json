{
    "workbench.colorTheme": "Catppuccin Macchiato",
    "editor.fontSize": 17,
    "editor.fontFamily": "JetBrainsMono Nerd Font Mono",

    "multiCommand.commands": [
        {
            "command": "multiCommand.copyAll",
            "sequence": [
                "editor.action.selectAll",
                "editor.action.clipboardCopyAction",
                "extension.vim_ctrl+o"
            ]
        },
        {
            "command": "multiCommand.toggleSidebar",
            "sequence": [
                {
                    "command": "workbench.action.toggleSidebarVisibility",
                    "args": false
                }
            ]
        }
    ],
    
    // "vim.leader": "<space>",
    // "vim.easymotion": true,
    // "vim.incsearch": true,
    // "vim.useSystemClipboard": true,
    // "vim.useCtrlKeys": true,
    // "vim.hlsearch": true,
    // "vim.insertModeKeyBindings": [
    //     {
    //         "before": ["j", "j"],
    //         "after": ["<Esc>"]
    //     }
    // ],
    // "vim.normalModeKeyBindingsNonRecursive": [
    //     {
    //         "before": ["K"],
    //         "commands": ["lineBreakInsert"],
    //         "silent": true
    //     },
    //     {
    //         "before": ["<leader>", "w"],
    //         "commands": [
    //             "workbench.action.files.save"
    //         ]
    //     },
    //     {
    //         "before": ["<leader>", "e"],
    //         "commands": [
    //             "workbench.action.toggleSidebarVisibility"
    //         ]
    //     },
    //     {
    //         "before": ["<leader>", "d"],
    //         "after": ["d", "d"]
    //     },
    //     {
    //         "before": ["<leader>", "c"],
    //         "commands": [
    //             "workbench.action.closeActiveEditor"
    //         ]
    //     },
    //     {
    //         "before": ["<leader>", "q"],
    //         "commands": [
    //             "workbench.action.closeEditorsInGroup"
    //         ]
    //     },
    //     {
    //         "before": ["<leader>", "/"],
    //         "commands": [
    //             "editor.action.commentLine"
    //         ]
    //     },
    //     {
    //         "before": ["<leader>", "a"],
    //         "commands": [
    //             "multiCommand.copyAll"
    //         ],
    //     },
    //     {
    //         "before": ["<leader>", "f", "f"],
    //         "commands": [
    //             "workbench.action.quickOpen"
    //         ],
    //     },
    //     {
    //         "before": ["u"],
    //         "commands": [
    //             "undo"
    //         ]
    //     },
    //     {
    //         "before": ["c-r"],
    //         "commands": [
    //             "redo"
    //         ]
    //     },
    // ],
    // "vim.handleKeys": {
    //     "<C-a>": false,
    //     "<C-b>": false,
    //     "<C-f>": false
    // },
    // "vim.timeout": 500,

    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "code-runner.runInTerminal": true,
    "terminal.external.linuxExec": "alacritty",
    "code-runner.saveFileBeforeRun": true,
    "code-runner.executorMap": {
        "javascript": "node",
        "java": "cd $dir && javac -d ~/Programs/CP/.java_compiled $fileName && java -cp ~/Programs/CP/.java_compiled $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "zig": "zig run",
        "cpp": "cd $dir && g++ $fileName -o ~/Programs/CP/.cpp_compiled/$fileNameWithoutExt && ~/Programs/CP/.cpp_compiled/$fileNameWithoutExt",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "python -u",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runghc",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "sml": "cd $dir && sml $fileName"
    },
    
    "catppuccin.italicKeywords": false,
    "catppuccin.boldKeywords": false,
    "catppuccin.accentColor": "lavender",
    "[python]": {
        "editor.formatOnType": true
    },

    //====================================================================
    //                       for neovim extension 
    //====================================================================
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
    "vscode-neovim.neovimInitVimPaths.linux": "~/.config/vscode-neovim/init.lua",

    //====================================================================
    //                       for which key extension 
    //====================================================================
	"whichkey.delay": 0,
	"whichkey.bindings": [
		{
			"key": " ",
			"name": "Commands",
			"type": "command",
			"command": "workbench.action.showCommands"
		},
		{
			"key": "?",
			"name": "Search keybindings",
			"type": "command",
			"command": "whichkey.searchBindings"
		},
		{
			"key": "b",
			"name": "+Buffers/Editors",
			"type": "bindings",
			"bindings": [
				{
					"key": "c",
					"name": "Close active editor",
					"type": "command",
					"command": "workbench.action.closeActiveEditor"
				},
				{
					"key": "k",
					"name": "Close other editors",
					"type": "command",
					"command": "workbench.action.closeOtherEditors"
				}
			]
		},
		{
			"key": "c",
			"name": "Close Active Editor",
			"type": "command",
			"command": "workbench.action.closeActiveEditor"
		},
		{
			"key": "k",
			"name": "Close Other Editor",
			"type": "command",
			"command": "workbench.action.closeOtherEditors"
		},
		{
			"key": "e",
			"name": "+Errors",
			"type": "bindings",
			"bindings": [
				{
					"key": ".",
					"name": "Error transient",
					"type": "command",
					"command": "whichkey.showTransient",
					"args": "whichkey.transient.error"
				},
				{
					"key": "l",
					"name": "List errors",
					"type": "command",
					"command": "workbench.actions.view.problems"
				},
				{
					"key": "n",
					"name": "Next error",
					"type": "command",
					"command": "editor.action.marker.next"
				},
				{
					"key": "p",
					"name": "Previous error",
					"type": "command",
					"command": "editor.action.marker.prev"
				}
			]
		},
		{
			"key": "f",
			"name": "+File",
			"type": "bindings",
			"bindings": [
				{
					"key": "s",
					"name": "Save file",
					"type": "command",
					"command": "workbench.action.files.save"
				},
				{
					"key": "S",
					"name": "Save all files",
					"type": "command",
					"command": "workbench.action.files.saveAll"
				},
				{
					"key": "r",
					"name": "Rename file",
					"type": "commands",
					"commands": [
						"workbench.files.action.showActiveFileInExplorer",
						"renameFile"
					]
				},
				{
					"key": "t",
					"name": "Show active file in tree/explorer view",
					"type": "command",
					"command": "workbench.files.action.showActiveFileInExplorer"
				},
				{
					"key": "y",
					"name": "Copy path of active file",
					"type": "command",
					"command": "workbench.action.files.copyPathOfActiveFile"
				},
				{
					"key": "f",
					"name": "Format file",
					"type": "command",
					"command": "editor.action.formatDocument"
				}
			]
		},
		{
			"key": "g",
			"name": "+Git",
			"type": "bindings",
			"bindings": [
				{
					"key": "b",
					"name": "Checkout [b]ranch",
					"type": "command",
					"command": "git.checkout"
				},
				{
					"key": "c",
					"name": "Commit",
					"type": "command",
					"command": "git.commit"
				},
				{
					"key": "d",
					"name": "Delete Branch",
					"type": "command",
					"command": "git.deleteBranch"
				},
				{
					"key": "f",
					"name": "Fetch",
					"type": "command",
					"command": "git.fetch"
				},
				{
					"key": "i",
					"name": "Init",
					"type": "command",
					"command": "git.init"
				},
				{
					"key": "s",
					"name": "Status",
					"type": "command",
					"command": "workbench.view.scm"
				},
				{
					"key": "g",
					"name": "Gitlens Graph",
					"type": "command",
					"command": "gitlens.showGraphPage"
				}
			]
		},
		{
			"key": "m",
			"name": "+Bookmark",
			"type": "bindings",
			"bindings": [
				{
					"key": "t",
					"name": "Toggle Bookmark",
					"type": "command",
					"command": "bookmarks.toggle"
				},
				{
					"key": "l",
					"name": "List Bookmark",
					"type": "command",
					"command": "bookmarks.list"
				},
				{
					"key": "n",
					"name": "Next Bookmark",
					"type": "command",
					"command": "bookmarks.jumpToNext"
				},
				{
					"key": "p",
					"name": "Previous Bookmark",
					"type": "command",
					"command": "bookmarks.jumpToPrevious"
				}
			]
		},
		{
			"key": "p",
			"name": "+Project",
			"type": "bindings",
			"bindings": [
				{
					"key": "f",
					"name": "Find file in project",
					"type": "command",
					"command": "workbench.action.quickOpen"
				},
				{
					"key": "p",
					"name": "Switch project",
					"type": "command",
					"command": "workbench.action.openRecent"
				},
				{
					"key": "t",
					"name": "Show tree/explorer view",
					"type": "command",
					"command": "workbench.view.explorer"
				}
			]
		},
		{
			"key": "s",
			"name": "+Search",
			"type": "bindings",
			"bindings": [
				{
					"key": "t",
					"name": "Search text in a project",
					"type": "command",
					"command": "workbench.action.findInFiles"
				},
				{
					"key": "p",
					"name": "Search in a project with a selection",
					"type": "commands",
					"commands": [
						"editor.action.addSelectionToNextFindMatch",
						"workbench.action.findInFiles"
					]
				},
				{
					"key": "r",
					"name": "Search all references",
					"type": "command",
					"command": "editor.action.referenceSearch.trigger"
				},
				{
					"key": "R",
					"name": "Search all references in side bar",
					"type": "command",
					"command": "references-view.find"
				}
			]
		},
		{
			"key": "t",
			"name": "+Toggles",
			"type": "bindings",
			"bindings": [
				{
					"key": "t",
					"name": "Theme",
					"type": "command",
					"command": "workbench.action.selectTheme"
				},
				{
					"key": "z",
					"name": "Toggle [z]en mode",
					"type": "command",
					"command": "workbench.action.toggleZenMode"
				},
				{
					"key": "s",
					"name": "Toggle [s]ide Bar visibility",
					"type": "command",
					"command": "workbench.action.toggleSidebarVisibility"
				},
				{
					"key": "a",
					"name": "Toggle [a]ctivity Bar visibility",
					"type": "command",
					"command": "workbench.action.toggleActivityBarVisibility"
				},
				{
					"key": "c",
					"name": "Toggle find [c]ase sensitive",
					"type": "command",
					"command": "toggleFindCaseSensitive"
				}
			]
		},
		{
			"key": "v",
			"name": "+VSCode",
			"type": "bindings",
			"bindings": [
				{
					"key": "e",
					"name": "Focus Active Editor Group",
					"type": "command",
					"command": "workbench.action.focusActiveEditorGroup"
				},
				{
					"key": "r",
					"name": "Move Side Bar Right",
					"type": "command",
					"command": "workbench.action.moveSideBarRight"
				},
				{
					"key": "l",
					"name": "Move Side Bar Left",
					"type": "command",
					"command": "workbench.action.moveSideBarLeft"
				}
			]
		},
		{
			"key": "r",
			"name": "+Refactor",
			"type": "bindings",
			"bindings": [
				{
					"key": "r",
					"name": "Rename Symbol",
					"type": "command",
					"command": "editor.action.rename"
				}
			]
		},
		{
			"key": "x",
			"name": "+Text",
			"type": "bindings",
			"bindings": [
				{
					"key": "i",
					"name": "Organize Imports",
					"type": "command",
					"command": "editor.action.organizeImports"
				},
				{
					"key": "r",
					"name": "Rename symbol",
					"type": "command",
					"command": "editor.action.rename"
				},
				{
					"key": "R",
					"name": "Refactor",
					"type": "command",
					"command": "editor.action.refactor"
				},
				{
					"key": ".",
					"name": "Quick fix",
					"type": "command",
					"command": "editor.action.quickFix"
				},
				{
					"key": "a",
					"name": "Find all references",
					"type": "command",
					"command": "editor.action.referenceSearch.trigger"
				}
			]
		},
		{
			"key": "z",
			"name": "Fold",
			"type": "bindings",
			"bindings": [
				{
					"key": "a",
					"name": "Toggle: around a point",
					"type": "command",
					"command": "editor.toggleFold"
				},
				{
					"key": "c",
					"name": "Close: at a point",
					"type": "command",
					"command": "editor.fold"
				},
				{
					"key": "b",
					"name": "Close: all block comments",
					"type": "command",
					"command": "editor.foldAllBlockComments"
				},
				{
					"key": "g",
					"name": "Close: all regions",
					"type": "command",
					"command": "editor.foldAllMarkerRegions"
				},
				{
					"key": "m",
					"name": "Close: all",
					"type": "command",
					"command": "editor.foldAll"
				},
				{
					"key": "o",
					"name": "Open: at a point",
					"type": "command",
					"command": "editor.unfold"
				},
				{
					"key": "O",
					"name": "Open: recursively",
					"type": "command",
					"command": "editor.unfoldRecursively"
				},
				{
					"key": "G",
					"name": "Open: all regions",
					"type": "command",
					"command": "editor.unfoldAllMarkerRegions"
				},
				{
					"key": "r",
					"name": "Open: all",
					"type": "command",
					"command": "editor.unfoldAll"
				}
			]
		}
	]

}
